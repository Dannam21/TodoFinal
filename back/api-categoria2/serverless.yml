org: dannamendez
service: api-categoria

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::385301667309:role/LabRole
  environment:
    CATEGORIA_TABLE: ${sls:stage}-t_categorias

functions:
  createCategoria:
    handler: create_categoria.lambda_handler
    events:
      - http:
          path: categoria/create
          method: post
    environment:
      TABLE_NAME: ${self:provider.environment.CATEGORIA_TABLE}

  getCategoria:
    handler: get_categoria.lambda_handler
    events:
      - http:
          path: categoria/get
          method: get
    environment:
      TABLE_NAME: ${self:provider.environment.CATEGORIA_TABLE}

  deleteCategoria:
    handler: delete_categoria.lambda_handler
    events:
      - http:
          path: categoria/delete
          method: delete
    environment:
      TABLE_NAME: ${self:provider.environment.CATEGORIA_TABLE}

  listCategorias:
    handler: list_categorias.lambda_handler
    events:
      - http:
          path: categoria/list
          method: get
    environment:
      TABLE_NAME: ${self:provider.environment.CATEGORIA_TABLE}

  updateCategoria:
    handler: update_categoria.lambda_handler
    events:
      - http:
          path: categoria/update
          method: put
    environment:
      TABLE_NAME: ${self:provider.environment.CATEGORIA_TABLE}

resources:
  Resources:
    CategoriasDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CATEGORIA_TABLE}
        AttributeDefinitions:
          - AttributeName: categoria_id
            AttributeType: S
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: nombre
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH   # Clave de partición
          - AttributeName: categoria_id
            KeyType: RANGE  # Clave de ordenación
        LocalSecondaryIndexes:
          - IndexName: LSI_Nombre
            KeySchema:
              - AttributeName: tenant_id  # Usamos 'tenant_id' como clave de partición para el LSI
                KeyType: HASH
              - AttributeName: nombre
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        GlobalSecondaryIndexes:
          - IndexName: GSI_TenantID
            KeySchema:
              - AttributeName: tenant_id
                KeyType: HASH  # Se usa 'tenant_id' para las consultas por inquilino
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5

        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
